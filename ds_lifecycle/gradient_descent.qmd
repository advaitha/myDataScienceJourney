# Gradient Descent

* The algorithm estimates the direction of steepest descent by computing the gradient of the loss function. The gradient points uphill, so the algorithm steps in the opposite direction by subtracting a fraction of the gradient
* Too bad your phone is out of juice, because the algorithm may not have propelled you to the bottom of a convex mountain. Instead, you may be stuck in a nonconvex landscape of multiple valleys (local minima), peaks (local maxima), saddles (saddle points), and plateaus. In fact, tasks like image recognition, text generation, and speech recognition are nonconvex, and many variations on gradient descent have emerged to handle such situations. For example, the algorithm may have [momentum](https://distill.pub/2017/momentum/?utm_campaign=The%20Batch&utm_source=hs_email&utm_medium=email&utm_content=217799082&_hsenc=p2ANqtz--o7eAr9Nm31aisPDXwcRFRVXAKKzyukegxGP2lmdCs7M5vqNGg5385tYof3A6S2W4cXL1TXVvcNeN-l-qSQMFU0wdl67kA0Etzc9L_slF88bRGXDM) that helps it zoom over small rises and dips, giving it a better chance at arriving at the bottom. Luckily, local and global minima tend to be [roughly equivalent](https://arxiv.org/abs/1412.0233?utm_campaign=The%20Batch&utm_source=hs_email&utm_medium=email&utm_content=217799082&_hsenc=p2ANqtz--o7eAr9Nm31aisPDXwcRFRVXAKKzyukegxGP2lmdCs7M5vqNGg5385tYof3A6S2W4cXL1TXVvcNeN-l-qSQMFU0wdl67kA0Etzc9L_slF88bRGXDM).
